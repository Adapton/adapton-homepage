var searchIndex = {};
searchIndex["adapton"] = {"doc":"","items":[[0,"macros","adapton","",null,null],[3,"ProgPt","adapton::macros","",null,null],[12,"symbol","","",0,null],[5,"my_hash","","",null,{"inputs":[{"name":"t"}],"output":{"name":"u64"}}],[5,"my_hash_n","","",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"u64"}}],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[0,"engine","adapton","",null,null],[3,"Name","adapton::engine","*Names*: First-class data that identifies a mutable cell (see\n`cell`) or a thunk (see `thunk`).  When a name identifies\ndifferent content over time, it describes *where* incremental\nchanging is occurring, relative to other (unaffected) parts of\ndata structures or computations.",null,null],[3,"Flags","","Flags control runtime behavior of the DCG.",null,null],[12,"use_purity_optimization","","",1,null],[12,"ignore_nominal_use_structural","","Ignore the `Nominal` `ArtIdChoice`, and use `Structural` behavior instead",1,null],[12,"check_dcg_is_wf","","After each Adapton operation, check that the DCG is well-formed",1,null],[12,"write_dcg","","Within each well-formedness check, write the DCG to the local filesystem",1,null],[12,"gmlog_dcg","","Deprecated: At certain points in the Engine&#39;s code, write state changes as graph-movie output\nTODO: To be replaced with DCG reflection, and reflection-to-filesystem logic.",1,null],[3,"DCG","","*(DCG) Demanded Computation Graph*: The cache of past computation.",null,null],[12,"flags","","",2,null],[3,"Cnt","","*Engine Counts*: Metrics that reflect the time and space costs of the engine.",null,null],[12,"create","","Number of DCG nodes created",3,null],[12,"eval","","Number of DCG nodes evaluated",3,null],[12,"dirty","","Number of DCG nodes marked as dirty",3,null],[12,"clean","","Number of DCG nodes reverted from dirty to clean",3,null],[12,"stack","","Maximum height of the DCG node stack.  This stack is pushed when DCG nodes are evaluated, and popped when they complete.",3,null],[3,"Art","","*Articulations:* for incrementally-changing data/computation.",null,null],[4,"Engine","","The engine API works in two modes: `Naive` and `DCG`. A `Naive` engine is stateless, whereas the `DCG` is stateful.",null,null],[13,"DCG","","",4,null],[13,"Naive","","",4,null],[4,"ArtIdChoice","","An `ArtIdChoice` choses between `Eager`, `Structural` and\n`Nominal` identities for articulation points introduced by\n`thunk`.",null,null],[13,"Eager","","Eagerly produces an `Art` that merely consists of an `Rc`; no additional indirection is needed/used.",5,null],[13,"Structural","","Identifies an `Art` based on hashing content (e.g., `prog_pt` for code and argument(s)).",5,null],[13,"Nominal","","Identifies an `Art` based on a programmer-chosen name.",5,null],[5,"init_dcg","","Initializes global state with a fresh DCG-based engine; returns the old engine.\nThe DCG is the central implementation structure behind Adapton.\nAt a high level, it consists of a data dependence graph (the &quot;demanded computation graph&quot;), and an associated memoization table.",null,{"inputs":[],"output":{"name":"engine"}}],[5,"init_naive","","Initializes global state with a (&quot;fresh&quot;) Naive engine; returns the old engine.\nThe naive engine is stateless, and performs no memoization and builds no dependence graphs.\n(Since the naive engine is stateless, every instance of the naive engine is equivalent to a &quot;fresh&quot; one).",null,{"inputs":[],"output":{"name":"engine"}}],[5,"use_engine","","Initializes global state with a fresh DCG-based engine; returns the old engine",null,{"inputs":[{"name":"engine"}],"output":{"name":"engine"}}],[5,"init_engine","","alias for `use_engine`",null,{"inputs":[{"name":"engine"}],"output":{"name":"engine"}}],[5,"name_unit","","Create a name from unit, that is, create a &quot;leaf&quot; name.",null,{"inputs":[],"output":{"name":"name"}}],[5,"name_pair","","Create one name from two (binary name composition)",null,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"name"}}],[5,"name_of_usize","","Create a name from a `usize`",null,{"inputs":[{"name":"usize"}],"output":{"name":"name"}}],[5,"name_of_isize","","Create a name from a `isize`",null,{"inputs":[{"name":"isize"}],"output":{"name":"name"}}],[5,"name_of_string","","Create a name from a `string`",null,{"inputs":[{"name":"string"}],"output":{"name":"name"}}],[5,"name_of_str","","Create a name from a `str`",null,{"inputs":[{"name":"str"}],"output":{"name":"name"}}],[5,"name_fork","","Create two names from one",null,null],[5,"name_fork3","","Create three names from one",null,null],[5,"name_fork4","","Create four names from one",null,null],[5,"ns","","Creates or re-enters a given namespace; performs the given computation there.",null,{"inputs":[{"name":"name"},{"name":"f"}],"output":{"name":"t"}}],[5,"structural","","Enters a special &quot;namespace&quot; where all name uses are ignored; instead, Adapton uses structural identity.",null,{"inputs":[{"name":"f"}],"output":{"name":"t"}}],[5,"cnt","","Counts various engine cost metrics, returning a product of sums (`Cnt`)",null,null],[5,"put","","Creates immutable, eager articulation.",null,{"inputs":[{"name":"t"}],"output":{"name":"art"}}],[5,"cell","","Creates a mutable articulation.",null,{"inputs":[{"name":"name"},{"name":"t"}],"output":{"name":"art"}}],[5,"set","","Mutates a mutable articulation.",null,{"inputs":[{"name":"art"},{"name":"t"}],"output":null}],[5,"thunk","","Creates an articulated computation.",null,{"inputs":[{"name":"artidchoice"},{"name":"progpt"},{"name":"rc"},{"name":"arg"},{"name":"spurious"}],"output":{"name":"art"}}],[5,"force","","Demand &amp; observe arts (all kinds): force",null,{"inputs":[{"name":"art"}],"output":{"name":"t"}}],[5,"engine_is_naive","","True iff the current engine is `Naive`",null,{"inputs":[],"output":{"name":"bool"}}],[5,"engine_is_dcg","","True iff the current engine is a `DCG`",null,{"inputs":[],"output":{"name":"bool"}}],[0,"reflect","","",null,null],[3,"Loc","adapton::engine::reflect","`Reflected version of engine::Loc`",null,null],[12,"path","","",6,null],[12,"name","","",6,null],[3,"Succ","","Reflected version of `engine::Succ`",null,null],[12,"dirty","","",7,null],[12,"loc","","",7,null],[12,"effect","","",7,null],[12,"value","","",7,null],[3,"Pred","","Reflected version of `engine::Pred`",null,null],[12,"loc","","",8,null],[12,"effect","","",8,null],[3,"CompNode","","Reflected version of `engine::CompNode`",null,null],[12,"preds","","",9,null],[12,"succs","","",9,null],[12,"prog_pt","","",9,null],[12,"value","","",9,null],[3,"RefNode","","Reflected version of `engine::MutNode`",null,null],[12,"preds","","",10,null],[12,"value","","",10,null],[3,"Frame","","Reflected version of `engine::Frame`",null,null],[12,"loc","","",11,null],[12,"succs","","",11,null],[3,"DCG","","Reflected version of `engine::DCG`",null,null],[12,"table","","",12,null],[12,"stack","","",12,null],[12,"path","","",12,null],[4,"Val","","Reflected value; Gives a syntax for inductive data type\nconstructors (`Constr`), named articulations (`Art`) and primitive\ndata (`Data).",null,null],[13,"Constr","","",13,null],[13,"Art","","",13,null],[13,"Data","","",13,null],[4,"ArtContent","","The content of an articulation: Either a cell holding a value, or\na thunk that has optionally produced a value.",null,null],[13,"Val","","A cell holding a value",14,null],[13,"Comp","","A thunk that, when forced, computes a value",14,null],[4,"Effect","","`Reflected version of engine::Effect`",null,null],[13,"Observe","","",15,null],[13,"Allocate","","",15,null],[4,"GraphNode","","Reflected version of `engine::GraphNode`",null,null],[13,"Comp","","",16,null],[13,"Ref","","",16,null],[8,"Data","","Reflected data",null,null],[11,"eq","adapton::engine","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"hash","","",17,null],[11,"fmt","","",1,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",3,null],[11,"hash","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"encode","","",3,null],[11,"add","","",3,null],[11,"zero","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"hash","","",18,null],[11,"fmt","","",18,null],[0,"collections","adapton","",null,null],[4,"Dir2","adapton::collections","",null,null],[13,"Left","","",19,null],[13,"Right","","",19,null],[4,"List","","",null,null],[13,"Nil","","",20,null],[13,"Cons","","",20,null],[13,"Tree","","",20,null],[13,"Name","","",20,null],[13,"Art","","",20,null],[4,"Tree","","",null,null],[13,"Nil","","",21,null],[13,"Leaf","","",21,null],[13,"Bin","","",21,null],[13,"Name","","",21,null],[13,"Art","","",21,null],[4,"NameElse","","",null,null],[13,"Name","","",22,null],[13,"Else","","",22,null],[5,"list_gen","","",null,{"inputs":[{"name":"usize"},{"name":"g"}],"output":{"name":"l"}}],[5,"list_nil","","",null,{"inputs":[],"output":{"name":"l"}}],[5,"list_cons","","",null,{"inputs":[{"name":"x"},{"name":"l"}],"output":{"name":"l"}}],[5,"list_name","","",null,{"inputs":[{"name":"name"},{"name":"l"}],"output":{"name":"l"}}],[5,"list_art","","",null,{"inputs":[{"name":"art"}],"output":{"name":"l"}}],[5,"list_map_lazy","","Lazily maps the list, guided by names in input list.\nCreates lazy named thunks in output for each name in input.",null,{"inputs":[{"name":"le"},{"name":"rc"}],"output":{"name":"li"}}],[5,"list_filter_lazy","","Lazily filters the list, guided by names in input list.\nCreates lazy named thunks in output for each name in input.",null,{"inputs":[{"name":"le"},{"name":"rc"}],"output":{"name":"li"}}],[5,"list_filter_eager","","Eagerly filters the list, guided by names in input list.\nMemoizes recursion for each name in input.",null,{"inputs":[{"name":"le"},{"name":"rc"}],"output":{"name":"li"}}],[5,"list_map_eager","","Eagerly maps the list.\nUses (eager) memoization for each name in `l`.",null,{"inputs":[{"name":"le"},{"name":"rc"}],"output":{"name":"li"}}],[5,"list_reverse","","Eagerly maps the list.\nUses (eager) memoization for each name in `l`.",null,{"inputs":[{"name":"le"},{"name":"li"}],"output":{"name":"li"}}],[5,"list_fold","","Ignores names; performs no memoization; use tree_fold_* for lists that could be long.",null,{"inputs":[{"name":"l"},{"name":"res"},{"name":"rc"}],"output":{"name":"res"}}],[5,"list_is_empty","","",null,{"inputs":[{"name":"l"}],"output":{"name":"bool"}}],[5,"list_pop","","",null,null],[5,"list_push","","",null,{"inputs":[{"name":"l"},{"name":"x"}],"output":{"name":"l"}}],[5,"list_append","","",null,{"inputs":[{"name":"l"},{"name":"l"}],"output":{"name":"l"}}],[5,"map_empty","","",null,{"inputs":[],"output":{"name":"m"}}],[5,"map_update","","",null,{"inputs":[{"name":"m"},{"name":"dom"},{"name":"cod"}],"output":{"name":"m"}}],[5,"map_find","","",null,{"inputs":[{"name":"m"},{"name":"dom"}],"output":{"name":"option"}}],[5,"map_fold","","",null,{"inputs":[{"name":"m"},{"name":"res"},{"name":"rc"}],"output":{"name":"res"}}],[5,"tree_fold_seq","","",null,{"inputs":[{"name":"t"},{"name":"dir2"},{"name":"res"},{"name":"rc"},{"name":"rc"},{"name":"rc"}],"output":{"name":"res"}}],[5,"tree_fold_up","","Fold over the structure of the tree, with results flowing up, from `nil` and `leaf` cases to the binary cases of `bin` and `name`.\nThis folding pattern is suitable for aggregating the leaf elements via an associative operation, such as a monoid (e.g., counting, addition, multiplication, maximum, minimum, etc.).\nSee `monoid_of_tree` for a wrapper function that offers this usage.\nThis folding pattern is also suitable for producing copies of the tree&#39;s structure.",null,{"inputs":[{"name":"t"},{"name":"rc"},{"name":"rc"},{"name":"rc"},{"name":"rc"}],"output":{"name":"res"}}],[5,"tree_fold_up_nm_dn","","Like `tree_fold_up`, except that names from `name` nodes are passed down, to the next `nil` and `leaf` cases.\nThe name from a `name` constructor associates to its right subtree, which is consistent with a left-to-right, in-order traversal of the tree.\nThe recursive argument `nm` provides the name for the left subtree, if any.",null,{"inputs":[{"name":"t"},{"name":"option"},{"name":"rc"},{"name":"rc"},{"name":"rc"},{"name":"rc"}],"output":{"name":"res"}}],[5,"tree_of_list","","",null,{"inputs":[{"name":"dir2"},{"name":"l"}],"output":{"name":"t"}}],[5,"tree_of_list_rec","","",null,null],[5,"list_of_tree","","List the leaf elements and names of a tree, in the given order, via a sequential, in-order traversal.\nDirection `Dir2::Left` lists elements from left to right. (Leftmost elements are in the head of the list).\nDirection `Dir2::Right` lists elements from right to left. (Rightmost elements are in the head of the list).\nPreserves the order of elements, up to `dir`, and the names in the tree.",null,{"inputs":[{"name":"t"},{"name":"dir2"}],"output":{"name":"l"}}],[5,"filter_list_of_tree","","Filter the leaf elements of a tree using a user-provided predicate, `pred`.\nReturns a list of the elements for which the predicate returns `true`.\nRetains exactly one name between any two elements that, in the original sequence, were separated by a name.\nDoes not insert names that were not present in the original sequence.",null,{"inputs":[{"name":"t"},{"name":"box"}],"output":{"name":"l"}}],[5,"filter_tree_of_tree","","Filter the leaf elements of a tree using a user-provided predicate, `pred`.\nReturns a tree of the elements for which the predicate returns `true`.\nRetains all names from the original tree, even if they merely name empty sub-trees.",null,{"inputs":[{"name":"te"},{"name":"box"}],"output":{"name":"ti"}}],[5,"monoid_of_tree","","Aggregates the leaf elements of a tree using a user-defined\nmonoid.  The monoid consists of an identity element `id_elm` and\nbinary operation over leaf values `bin_op`.\nDerived from `tree_fold_up`.",null,{"inputs":[{"name":"te"},{"name":"x"},{"name":"rc"}],"output":{"name":"x"}}],[5,"eager_tree_of_tree","","Produces a tree with the same structure as its input, but without\nany articulations.  Useful for `println`-style debugging, and for\nequality comparisons across distinct engine implementations (e.g.,\nto verify the DCG-based engine).",null,{"inputs":[{"name":"te"}],"output":{"name":"ti"}}],[5,"prune_tree_of_tree","","Produces a tree with the same structure as its input, but without\nany empty subtrees, and with articulations placed around the\nsubtrees of named binary nodes.",null,{"inputs":[{"name":"te"}],"output":{"name":"ti"}}],[5,"vec_of_list","","",null,{"inputs":[{"name":"l"},{"name":"option"}],"output":{"name":"vec"}}],[5,"list_of_vec","","Constructs a linked list that consists of elements and names, as\ngiven by the input vector (in that order).\nNot incremental; used only for setting up inputs for tests.",null,{"inputs":[{"name":"vec"}],"output":{"name":"l"}}],[5,"list_merge","","Produce a lazy list that consists of merging two input lists.\nThe output is lazy to the extent that the input lists contain `name`s.\nWhen the input lists are each sorted according to `Ord`; the output is sorted.",null,{"inputs":[{"name":"option"},{"name":"l"},{"name":"option"},{"name":"l"}],"output":{"name":"l"}}],[5,"mergesort_list_of_tree","","Demand-driven sort over a tree&#39;s leaves, whose elements are `Ord`.\nTo the extent that the tree contains `name`s, the output is lazy, and thus sorts on-demand.\nDemanding the first element is `O(n)` for a tree with `n` leaves.\nDemanding the next element requires more comparisons, but fewer than the first element.\nDemanding the last element requires only `O(1)` comparisons.\nIn total, the number of comparisons to demand the entire output is, as usual, `O(n ° log(n))`.",null,{"inputs":[{"name":"t"}],"output":{"name":"l"}}],[5,"mergesort_list_of_tree2","","Demand-driven sort over a tree&#39;s leaves, whose elements are `Ord`.\nTo the extent that the tree contains `name`s, the output is lazy, and thus sorts on-demand.\nDemanding the first element is `O(n)` for a tree with `n` leaves.\nDemanding the next element requires more comparisons, but fewer than the first element.\nDemanding the last element requires only `O(1)` comparisons.\nIn total, the number of comparisons to demand the entire output is, as usual, `O(n ° log(n))`.",null,{"inputs":[{"name":"t"},{"name":"option"}],"output":{"name":"l"}}],[5,"list_merge_wrapper","","",null,{"inputs":[{"name":"option"},{"name":"l"},{"name":"option"},{"name":"l"}],"output":{"name":"l"}}],[0,"trie","","",null,null],[3,"Meta","adapton::collections::trie","Metadata held by the root node.",null,null],[12,"min_depth","","",23,null],[4,"Trie","","Probablistically Balanced Trie\nRough implementation of probabilistic tries from OOPSLA 2015 paper.",null,null],[13,"Nil","","",24,null],[13,"Leaf","","",24,null],[13,"Bin","","",24,null],[13,"Root","","",24,null],[13,"Name","","",24,null],[13,"Art","","",24,null],[5,"trie_fold","","",null,{"inputs":[{"name":"t"},{"name":"res"},{"name":"rc"}],"output":{"name":"res"}}],[5,"trie_of_list","","",null,{"inputs":[{"name":"l"}],"output":{"name":"t"}}],[6,"Set","","",null,null],[17,"PLACEMENT_SEED","","",null,null],[8,"MetaT","","",null,null],[10,"hash_seeded","","",25,null],[8,"TrieIntro","","",null,null],[10,"nil","","",26,{"inputs":[{"name":"bs"}],"output":{"name":"self"}}],[10,"leaf","","",26,{"inputs":[{"name":"bs"},{"name":"x"}],"output":{"name":"self"}}],[10,"bin","","",26,{"inputs":[{"name":"bs"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"root","","",26,{"inputs":[{"name":"meta"},{"name":"self"}],"output":{"name":"self"}}],[10,"name","","",26,{"inputs":[{"name":"name"},{"name":"self"}],"output":{"name":"self"}}],[10,"art","","",26,{"inputs":[{"name":"art"}],"output":{"name":"self"}}],[10,"empty","","",26,{"inputs":[{"name":"meta"}],"output":{"name":"self"}}],[10,"singleton","","",26,{"inputs":[{"name":"meta"},{"name":"name"},{"name":"x"}],"output":{"name":"self"}}],[10,"extend","","",26,{"inputs":[{"name":"name"},{"name":"self"},{"name":"x"}],"output":{"name":"self"}}],[8,"TrieElim","","",null,null],[10,"find","","",27,{"inputs":[{"name":"self"},{"name":"x"},{"name":"i64"}],"output":{"name":"option"}}],[10,"is_empty","","",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"split_atomic","","",27,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"elim","","",27,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"rootc"},{"name":"namec"}],"output":{"name":"res"}}],[10,"elim_arg","","",27,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"rootc"},{"name":"namec"}],"output":{"name":"res"}}],[10,"elim_ref","","",27,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"rootc"},{"name":"namec"}],"output":{"name":"res"}}],[8,"SetIntro","","",null,null],[10,"empty","","",28,{"inputs":[],"output":{"name":"self"}}],[10,"add","","",28,{"inputs":[{"name":"self"},{"name":"x"}],"output":{"name":"self"}}],[8,"SetElim","","",null,null],[10,"mem","","",29,{"inputs":[{"name":"self"},{"name":"x"}],"output":{"name":"bool"}}],[10,"fold","","",29,{"inputs":[{"name":"self"},{"name":"res"},{"name":"rc"}],"output":{"name":"res"}}],[0,"raz","adapton::collections","Random Access Zipper (RAZ).\nPurely functional sequences with global access (via a balanced\ntree structure) and simple local edits (via a zipper structure).",null,null],[3,"Punc","adapton::collections::raz","Punctuation: Information that is interposed between each run of\nelements, and sometimes before and after them.  The RAZ uses\nuser-chosen levels to probabilistically balance the Tree form.\nThe RAZ uses the Name to identify cached computations in\nAdapton.",null,null],[12,"level","","",30,null],[12,"name","","",30,null],[3,"Zip","","The Zipper form consists of element sequences before (to the\nleft of) and after (to the right of) a distinguished punctuation\npoint in the sequence.",null,null],[4,"Tree","","A binary tree with vector leaves (aka, a &quot;rope&quot;), balanced\nprobabilistically.",null,null],[13,"Nil","","Invariant: Nil only appears in certain edge positions",31,null],[13,"Leaf","","Invariant: Each element run in a Leaf is interposed between two `Punc`s",31,null],[13,"Bin","","(Non-trivial) Inductive case: Two balanced sub-trees, interposed with punctuation.\nInvariant: For balance, every Bin node in left/right subtrees has a equal-or-lower level.",31,null],[13,"Art","","(Trivial) Inductive case: An Adapton articulation.",31,null],[4,"Dir","","Distinguishes left (`L`) and right (`R`) traversal orders for various operations involving trees.",null,null],[13,"L","","",32,null],[13,"R","","",32,null],[4,"Edit","","An O(1)-sized change to the zipper: a single element insertion,\nreplacement, removal; or, a local cursor movement by one element\nin either direction.",null,null],[13,"Insert","","",33,null],[13,"Replace","","",33,null],[13,"Remove","","",33,null],[13,"Move","","",33,null],[5,"zip_empty","","A zipper that consists of zero elements (and exactly one punctuation `p`).",null,{"inputs":[{"name":"punc"}],"output":{"name":"zip"}}],[5,"tree_empty","","A tree that consists of zero elements (and exactly one punctuation `p`).",null,{"inputs":[{"name":"punc"}],"output":{"name":"tree"}}],[5,"zip_insert","","Transform the zipper, inserting element `x` in the given\ndirection `d`. The optional punctuation `p` follows the inserted\nelement, in the given direction.",null,{"inputs":[{"name":"zip"},{"name":"dir"},{"name":"x"},{"name":"option"}],"output":{"name":"zip"}}],[5,"zip_edit","","Perform the given edit, in the given direction, at the current focus of the given zipper.\nThe zipper is taken because its head vectors may be mutated, e.g., to insert or remove elements.",null,{"inputs":[{"name":"zip"},{"name":"edit"}],"output":{"name":"zip"}}],[5,"tree_append","","Appends the sequences of two trees",null,{"inputs":[{"name":"tree"},{"name":"tree"}],"output":{"name":"tree"}}],[5,"tree_of_zip","","Unfocuses the zipper into a tree form",null,{"inputs":[{"name":"zip"}],"output":{"name":"tree"}}],[5,"mergesort_eager","","Merge-sort the elements of the given tree, producing another\ntree, in ascending order (when `d = Dir::L`) or descending order\n(when `d = Dir::R`).",null,{"inputs":[{"name":"option"},{"name":"tree"},{"name":"dir"}],"output":{"name":"tree"}}],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"hash","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"hash","","",31,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"hash","","",34,null],[11,"fmt","","",34,null],[11,"clone","","",34,null],[11,"eq","","",32,null],[11,"hash","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"hash","","",33,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[8,"ListIntro","adapton::collections","Types that can be created like a list of `X` are `ListIntro&lt;X&gt;`",null,null],[10,"nil","","Introduce an empty list",35,{"inputs":[],"output":{"name":"self"}}],[10,"cons","","Introduce a Cons cell",35,{"inputs":[{"name":"x"},{"name":"self"}],"output":{"name":"self"}}],[10,"name","","Introduce a Name &quot;cons&quot; cell",35,{"inputs":[{"name":"name"},{"name":"self"}],"output":{"name":"self"}}],[10,"art","","Introduce a list with an articulation that holds a list",35,{"inputs":[{"name":"art"}],"output":{"name":"self"}}],[11,"singleton","","Creates a singleton list. Derived from `cons` and `nil` introduction forms.",35,{"inputs":[{"name":"x"}],"output":{"name":"self"}}],[11,"name_art","","For `Some(nm)`, wraps the given list in `name` and `art` constructors for given name `nm`.\nFor `None`, is the list identity function.",35,{"inputs":[{"name":"option"},{"name":"self"}],"output":{"name":"self"}}],[8,"ListElim","","Types that can be pattern-matched like a list of `X` are `ListElim&lt;X&gt;`.\nWe consider iterators to be a similar (nearly analogous) trait.\nThe key distinction here are that list elimination is a pattern-match used with (pure) recursion,\nas opposed to an imperative for-loop, as is typical of iteration;\nfurther, lists in Adapton contain data (of type `X`) and names (of type `Name`).",null,null],[10,"elim","","Eliminate a list with the given functions (for the pattern match\narms) that handle the `nil`, `cons` and `name` cases.\nEliminates the `art` case internally, by forcing the art and\neliminating the resulting list with the given handler functions;\nforces multiple `art` cases, if need be.",36,{"inputs":[{"name":"self"},{"name":"nilf"},{"name":"consf"},{"name":"namef"}],"output":{"name":"res"}}],[10,"elim_arg","","Like `elim`, except that the functions are given an additional\nargument.  This variant is needed due to the move semantics of\nRust. The argument is moved into the body of the activated\nhandler function when it is applied.",36,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilf"},{"name":"consf"},{"name":"namef"}],"output":{"name":"res"}}],[11,"is_empty","","Tests if the list contains any `cons` cells. Derived from `elim`.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_name","","Tests if the head of the list consists of a `name` constructor. Derived from `elim`.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"RoseIntro","","Rose Trees: A tree with arbitrary branching at each node.\nSee also, Definition 2 (page 2) of\n  [*Parallel Implementation of Tree Skeletons*, by D.B. Skillicorn 1995.]\n  (http://ftp.qucis.queensu.ca/TechReports/Reports/1995-380.pdf)",null,null],[16,"List","","",37,null],[10,"leaf","","Introduce a leaf with exactly zero children",37,{"inputs":[{"name":"leaf"}],"output":{"name":"self"}}],[10,"branch","","Introduce a branch with zero or more subtrees",37,null],[10,"name","","Introduce a Named subtree",37,{"inputs":[{"name":"name"},{"name":"self"}],"output":{"name":"self"}}],[10,"art","","Introduce a list with an articulation that holds a list",37,{"inputs":[{"name":"art"}],"output":{"name":"self"}}],[8,"RoseElim","","Rose Trees: A tree with arbitrary branching at each node.\nSee also, Definition 2 (page 2) of\n  [*Parallel Implementation of Tree Skeletons*, by D.B. Skillicorn 1995.]\n  (http://ftp.qucis.queensu.ca/TechReports/Reports/1995-380.pdf)",null,null],[16,"Children","","",38,null],[10,"elim","","",38,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"leaffn"},{"name":"branchfn"},{"name":"namefn"}],"output":{"name":"res"}}],[8,"Level","","Levels for a probabilistically-balanced trees. For more details see\nPugh and Teiltelbaum&#39;s POPL 1989 paper, and its &quot;Chunky List&quot;\nrepresentation (*Incremental Computation via Function Caching*).",null,null],[10,"new","","",39,{"inputs":[{"name":"x"}],"output":{"name":"self"}}],[10,"bits","","",39,{"inputs":[],"output":{"name":"self"}}],[10,"zero","","",39,{"inputs":[],"output":{"name":"self"}}],[10,"inc","","",39,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"add","","",39,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lte","","",39,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"max_val","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"max","","",39,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"TreeIntro","","Types that can be created like a (binary) tree with leaves of type `Leaf` are `TreeIntro&lt;Leaf&gt;`.\nWe recognize that monoids are a nearly-analogous case;\nthe key differences with monoids are that trees contain names (see `name` fn) and articulations (see `art` fn);\nfurther, the binary cases `name` and `bin` carry levels of type `Lev`, which helps establish and maintain balance.",null,null],[10,"nil","","",40,{"inputs":[],"output":{"name":"self"}}],[10,"leaf","","",40,{"inputs":[{"name":"leaf"}],"output":{"name":"self"}}],[10,"bin","","",40,{"inputs":[{"name":"lev"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"name","","",40,{"inputs":[{"name":"name"},{"name":"lev"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"art","","",40,{"inputs":[{"name":"art"}],"output":{"name":"self"}}],[8,"TreeElim","","",null,null],[10,"lev_of_tree","","",41,{"inputs":[{"name":"self"}],"output":{"name":"lev"}}],[10,"elim","","",41,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"}],"output":{"name":"res"}}],[10,"elim_ref","","",41,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"}],"output":{"name":"res"}}],[10,"elim_arg","","",41,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"}],"output":{"name":"res"}}],[10,"full_move","","",41,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"},{"name":"artc"}],"output":{"name":"res"}}],[11,"is_empty","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_nil","","",41,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"MapIntro","","",null,null],[10,"empty","","",42,{"inputs":[],"output":{"name":"self"}}],[10,"update","","",42,{"inputs":[{"name":"self"},{"name":"dom"},{"name":"cod"}],"output":{"name":"self"}}],[8,"MapElim","","",null,null],[10,"find","","",43,{"inputs":[{"name":"self"},{"name":"dom"}],"output":{"name":"option"}}],[10,"remove","","",43,null],[10,"fold","","",43,{"inputs":[{"name":"self"},{"name":"res"},{"name":"rc"}],"output":{"name":"res"}}],[10,"append","","",43,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"SetIntro","","",null,null],[10,"empty","","",44,{"inputs":[],"output":{"name":"self"}}],[10,"add","","",44,{"inputs":[{"name":"self"},{"name":"elm"}],"output":{"name":"self"}}],[10,"remove","","",44,{"inputs":[{"name":"self"},{"name":"elm"}],"output":{"name":"self"}}],[10,"union","","",44,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"inter","","",44,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"diff","","",44,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"SetElim","","",null,null],[10,"is_mem","","",45,{"inputs":[{"name":"self"},{"name":"elm"}],"output":{"name":"bool"}}],[10,"fold","","",45,{"inputs":[{"name":"self"},{"name":"res"},{"name":"f"}],"output":{"name":"res"}}],[11,"clone","","",19,null],[11,"hash","","",19,null],[11,"eq","","",19,null],[11,"fmt","","",19,null],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"hash","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"hash","","",21,null],[11,"clone","","",21,null],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"hash","","",22,null],[11,"nil","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"cons","","",20,{"inputs":[{"name":"x"},{"name":"self"}],"output":{"name":"self"}}],[11,"name","","",20,{"inputs":[{"name":"name"},{"name":"self"}],"output":{"name":"self"}}],[11,"art","","",20,{"inputs":[{"name":"art"}],"output":{"name":"self"}}],[11,"elim","","",20,{"inputs":[{"name":"self"},{"name":"nilf"},{"name":"consf"},{"name":"namef"}],"output":{"name":"res"}}],[11,"elim_arg","","",20,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilf"},{"name":"consf"},{"name":"namef"}],"output":{"name":"res"}}],[11,"empty","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"update","","",20,{"inputs":[{"name":"self"},{"name":"dom"},{"name":"cod"}],"output":{"name":"self"}}],[11,"find","","",20,{"inputs":[{"name":"self"},{"name":"dom"}],"output":{"name":"option"}}],[11,"remove","","",20,null],[11,"fold","","",20,{"inputs":[{"name":"self"},{"name":"res"},{"name":"rc"}],"output":{"name":"res"}}],[11,"append","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"nil","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"leaf","","",21,{"inputs":[{"name":"leaf"}],"output":{"name":"self"}}],[11,"bin","","",21,{"inputs":[{"name":"usize"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"name","","",21,{"inputs":[{"name":"name"},{"name":"usize"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"art","","",21,{"inputs":[{"name":"art"}],"output":{"name":"self"}}],[11,"elim_arg","","",21,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"}],"output":{"name":"res"}}],[11,"full_move","","",21,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"},{"name":"artc"}],"output":{"name":"res"}}],[11,"elim","","",21,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"}],"output":{"name":"res"}}],[11,"elim_ref","","",21,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"namec"}],"output":{"name":"res"}}],[11,"lev_of_tree","","",21,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","adapton::collections::trie","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"clone","","",24,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"hash","","",23,null],[11,"clone","","",23,null],[11,"hash_seeded","","",23,null],[11,"nil","","",24,{"inputs":[{"name":"bs"}],"output":{"name":"self"}}],[11,"leaf","","",24,{"inputs":[{"name":"bs"},{"name":"x"}],"output":{"name":"self"}}],[11,"bin","","",24,{"inputs":[{"name":"bs"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[11,"root","","",24,{"inputs":[{"name":"meta"},{"name":"self"}],"output":{"name":"self"}}],[11,"name","","",24,{"inputs":[{"name":"name"},{"name":"self"}],"output":{"name":"self"}}],[11,"art","","",24,{"inputs":[{"name":"art"}],"output":{"name":"self"}}],[11,"empty","","",24,{"inputs":[{"name":"meta"}],"output":{"name":"self"}}],[11,"singleton","","",24,{"inputs":[{"name":"meta"},{"name":"name"},{"name":"x"}],"output":{"name":"self"}}],[11,"extend","","",24,{"inputs":[{"name":"name"},{"name":"self"},{"name":"x"}],"output":{"name":"self"}}],[11,"hash","","",24,null],[11,"find","","",24,{"inputs":[{"name":"self"},{"name":"x"},{"name":"i64"}],"output":{"name":"option"}}],[11,"is_empty","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"split_atomic","","",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"elim","","",24,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"rootc"},{"name":"namec"}],"output":{"name":"res"}}],[11,"elim_arg","","",24,{"inputs":[{"name":"self"},{"name":"arg"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"rootc"},{"name":"namec"}],"output":{"name":"res"}}],[11,"elim_ref","","",24,{"inputs":[{"name":"self"},{"name":"nilc"},{"name":"leafc"},{"name":"binc"},{"name":"rootc"},{"name":"namec"}],"output":{"name":"res"}}],[11,"fmt","adapton::engine::reflect","",13,null],[11,"fmt","","",14,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"hash","","",6,null],[11,"fmt","","",15,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"fmt","","",16,null],[11,"fmt","","",11,null],[11,"fmt","","",12,null],[14,"prog_pt","adapton","",null,null],[14,"thunk","","",null,null],[14,"memo","","",null,null],[14,"eager","","",null,null],[14,"cell_call","","",null,null]],"paths":[[3,"ProgPt"],[3,"Flags"],[3,"DCG"],[3,"Cnt"],[4,"Engine"],[4,"ArtIdChoice"],[3,"Loc"],[3,"Succ"],[3,"Pred"],[3,"CompNode"],[3,"RefNode"],[3,"Frame"],[3,"DCG"],[4,"Val"],[4,"ArtContent"],[4,"Effect"],[4,"GraphNode"],[3,"Name"],[3,"Art"],[4,"Dir2"],[4,"List"],[4,"Tree"],[4,"NameElse"],[3,"Meta"],[4,"Trie"],[8,"MetaT"],[8,"TrieIntro"],[8,"TrieElim"],[8,"SetIntro"],[8,"SetElim"],[3,"Punc"],[4,"Tree"],[4,"Dir"],[4,"Edit"],[3,"Zip"],[8,"ListIntro"],[8,"ListElim"],[8,"RoseIntro"],[8,"RoseElim"],[8,"Level"],[8,"TreeIntro"],[8,"TreeElim"],[8,"MapIntro"],[8,"MapElim"],[8,"SetIntro"],[8,"SetElim"]]};
searchIndex["adapton_lab"] = {"doc":"","items":[[0,"labdef","adapton_lab","See also: Defines lab parameters `LabParams` and `LabDef`, the\nparameters for running the abstract commutative diagram. See\n[Adapton Lab README](https://github.com/cuplv/adapton-lab.rust).",null,null],[3,"GenerateParams","adapton_lab::labdef","Parameters for generating and editing input; See `README.md` for more.",null,null],[12,"size","","",0,null],[12,"gauge","","",0,null],[12,"nominal_strategy","","",0,null],[3,"TestComputer","","Generic notion of an Incremental Computation to Evaluate and Test.\nWe instantiate this structure once for each test in our test suite.\nWe implement the `LabDef` trait generically for this structure.",null,null],[12,"identity","","",1,null],[12,"computer","","",1,null],[12,"input","","",1,null],[12,"editst","","",1,null],[12,"inputdist","","",1,null],[12,"output","","",1,null],[3,"LabParams","","Parameters to running a single lab experiment.",null,null],[12,"sample_params","","",2,null],[12,"change_batch_loopc","","Number of change-batches to perform in a loop; each is interposed with computing the new output.",2,null],[3,"SampleParams","","Parameters for collecting a single sample.  In addition to these\nparameters, the experiment maintains a Rng based on the\ninput_seeds, below; this Rng is given to Edit::edit to generate\npsuedo-random edits, in batches.  For each engine, this Rng is\nsequenced across successive samples.  Given an input_seeds vector,\nthere is one unique Rng sequence for each engine&#39;s sequence of\nsamples.",null,null],[12,"input_seeds","","We convert this seed into a random-number-generator before generating and editing.",3,null],[12,"generate_params","","Other parameters for generating the input.",3,null],[12,"validate_output","","Whether to validate the output after each computation using the naive and DCG engines",3,null],[12,"change_batch_size","","Size of each batch of changes.",3,null],[3,"LabResults","","The result of a lab is a sequence of samples.",null,null],[12,"samples","","",4,null],[3,"Sample","","The experiment consists of a loop over samples.  For each sample,\nwe switch back and forth between using the Naive engine, and using\nthe DCG engine.  We want to interleave this way for each sample in\norder to compare outputs and metrics (counts and timings) on a\nfine-grained scale.",null,null],[12,"batch_name","","",5,null],[12,"dcg_sample","","",5,null],[12,"naive_sample","","",5,null],[12,"output_valid","","",5,null],[3,"EngineSample","","To sample a single engine, we record metrics for processing the\ninput (left vertical edge in `README.md` diagram).",null,null],[12,"process_input","","",6,null],[12,"compute_output","","",6,null],[3,"EngineMetrics","","For each engine, for each sampled subcomputation, we record the\nreal time (in nanoseconds) and engine-based counters for DCG costs.",null,null],[12,"time_ns","","",7,null],[12,"engine_cnt","","",7,null],[4,"NominalStrategy","","A bit that controls how names are placed in the input; See `README.md` for more.",null,null],[13,"Regular","","",8,null],[13,"ByContent","","",8,null],[8,"Generate","","Generic method for generating a random input.\nSee `README.md` for more.",null,null],[10,"generate","","",9,{"inputs":[{"name":"r"},{"name":"generateparams"}],"output":{"name":"t"}}],[8,"Edit","","Generic process for editing an input randomly, in a stateful sequence of edits.\nSee `README.md` for more.",null,null],[10,"edit_init","","",10,{"inputs":[{"name":"r"},{"name":"generateparams"}],"output":{"name":"s"}}],[10,"edit","","",10,null],[8,"Compute","","Generic notion of a computation to run naively and incrementally.\nIt has specific `Input` and `Output` types, and a way to `compute`\nthe `Output` from the `Input`.\nSee `README.md` for more.",null,null],[10,"compute","","",11,{"inputs":[{"name":"input"}],"output":{"name":"output"}}],[8,"LabDef","","Lab experiment definition: Hides the Input, Output and Compute types of a\nTestComputer, abstracting over them.\nSee catalog module for example instances.",null,null],[10,"name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[10,"run","","",12,{"inputs":[{"name":"self"},{"name":"labparams"}],"output":{"name":"labresults"}}],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[0,"labrun","adapton_lab","See also: **Generically implements** the abstract commutative\ndiagram. See [Adapton Lab\nREADME](https://github.com/cuplv/adapton-lab.rust).",null,null],[3,"TestEngineState","adapton_lab::labrun","",null,null],[12,"engine","","",13,null],[12,"input","","",13,null],[3,"TestState","","",null,null],[12,"params","","",14,null],[12,"rng","","",14,null],[12,"change_batch_num","","",14,null],[12,"dcg_state","","",14,null],[12,"naive_state","","",14,null],[12,"samples","","",14,null],[8,"SampleGen","","",null,null],[10,"sample","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"sample","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"name","adapton_lab::labdef","",1,{"inputs":[{"name":"self"}],"output":{"name":"name"}}],[11,"run","","",1,{"inputs":[{"name":"self"},{"name":"labparams"}],"output":{"name":"labresults"}}],[0,"catalog","adapton_lab","See also: Provides **concrete instances** of the diagram from\n[Adapton Lab README](https://github.com/cuplv/adapton-lab.rust).",null,null],[3,"UniformPrepend","adapton_lab::catalog","",null,null],[3,"LazyMap","","",null,null],[3,"EagerMap","","",null,null],[3,"LazyFilter","","",null,null],[3,"EagerFilter","","",null,null],[3,"Reverse","","",null,null],[3,"LazyMergesort","","",null,null],[3,"EagerMergesort","","",null,null],[3,"Quickhull","","",null,null],[5,"all_tests","","This is the master list of all tests in the current Adapton Lab",null,{"inputs":[],"output":{"name":"vec"}}],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"generate","","",16,{"inputs":[{"name":"r"},{"name":"generateparams"}],"output":{"name":"list"}}],[11,"edit_init","","",16,{"inputs":[{"name":"r"},{"name":"generateparams"}],"output":{"name":"usize"}}],[11,"edit","","",16,null],[11,"generate","","",16,{"inputs":[{"name":"r"},{"name":"generateparams"}],"output":{"name":"list"}}],[11,"edit_init","","",16,{"inputs":[{"name":"r"},{"name":"generateparams"}],"output":{"name":"usize"}}],[11,"edit","","",16,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"compute","","",18,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[11,"compute","","",20,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[11,"compute","","",17,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[11,"compute","","",19,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[11,"compute","","",21,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[11,"compute","","",22,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[11,"compute","","",23,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[11,"compute","","",24,{"inputs":[{"name":"list"}],"output":{"name":"list"}}],[14,"testcomputer","adapton_lab","",null,null]],"paths":[[3,"GenerateParams"],[3,"TestComputer"],[3,"LabParams"],[3,"SampleParams"],[3,"LabResults"],[3,"Sample"],[3,"EngineSample"],[3,"EngineMetrics"],[4,"NominalStrategy"],[8,"Generate"],[8,"Edit"],[8,"Compute"],[8,"LabDef"],[3,"TestEngineState"],[3,"TestState"],[8,"SampleGen"],[3,"UniformPrepend"],[3,"LazyMap"],[3,"EagerMap"],[3,"LazyFilter"],[3,"EagerFilter"],[3,"Reverse"],[3,"LazyMergesort"],[3,"EagerMergesort"],[3,"Quickhull"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",16,null],[12,"sa_family","","",16,null],[12,"sa_data","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",17,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",18,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"utsname","","",null,null],[12,"sysname","","",22,null],[12,"nodename","","",22,null],[12,"release","","",22,null],[12,"version","","",22,null],[12,"machine","","",22,null],[3,"msghdr","","",null,null],[12,"msg_name","","",23,null],[12,"msg_namelen","","",23,null],[12,"msg_iov","","",23,null],[12,"msg_iovlen","","",23,null],[12,"msg_control","","",23,null],[12,"msg_controllen","","",23,null],[12,"msg_flags","","",23,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",24,null],[12,"if_name","","",24,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",25,null],[12,"aio_offset","","",25,null],[12,"aio_buf","","",25,null],[12,"aio_nbytes","","",25,null],[12,"aio_reqprio","","",25,null],[12,"aio_sigevent","","",25,null],[12,"aio_lio_opcode","","",25,null],[3,"utmpx","","",null,null],[12,"ut_user","","",26,null],[12,"ut_id","","",26,null],[12,"ut_line","","",26,null],[12,"ut_pid","","",26,null],[12,"ut_type","","",26,null],[12,"ut_tv","","",26,null],[12,"ut_host","","",26,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",27,null],[12,"gl_offs","","",27,null],[12,"gl_pathv","","",27,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",28,null],[12,"ss_family","","",28,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",29,null],[12,"ai_family","","",29,null],[12,"ai_socktype","","",29,null],[12,"ai_protocol","","",29,null],[12,"ai_addrlen","","",29,null],[12,"ai_canonname","","",29,null],[12,"ai_addr","","",29,null],[12,"ai_next","","",29,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",30,null],[12,"denom","","",30,null],[3,"stat","","",null,null],[12,"st_dev","","",31,null],[12,"st_mode","","",31,null],[12,"st_nlink","","",31,null],[12,"st_ino","","",31,null],[12,"st_uid","","",31,null],[12,"st_gid","","",31,null],[12,"st_rdev","","",31,null],[12,"st_atime","","",31,null],[12,"st_atime_nsec","","",31,null],[12,"st_mtime","","",31,null],[12,"st_mtime_nsec","","",31,null],[12,"st_ctime","","",31,null],[12,"st_ctime_nsec","","",31,null],[12,"st_birthtime","","",31,null],[12,"st_birthtime_nsec","","",31,null],[12,"st_size","","",31,null],[12,"st_blocks","","",31,null],[12,"st_blksize","","",31,null],[12,"st_flags","","",31,null],[12,"st_gen","","",31,null],[12,"st_lspare","","",31,null],[12,"st_qspare","","",31,null],[3,"dirent","","",null,null],[12,"d_ino","","",32,null],[12,"d_seekoff","","",32,null],[12,"d_reclen","","",32,null],[12,"d_namlen","","",32,null],[12,"d_type","","",32,null],[12,"d_name","","",32,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",33,null],[12,"si_errno","","",33,null],[12,"si_code","","",33,null],[12,"si_pid","","",33,null],[12,"si_uid","","",33,null],[12,"si_status","","",33,null],[12,"si_addr","","",33,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",34,null],[12,"sa_mask","","",34,null],[12,"sa_flags","","",34,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",35,null],[12,"ss_size","","",35,null],[12,"ss_flags","","",35,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",36,null],[12,"fst_posmode","","",36,null],[12,"fst_offset","","",36,null],[12,"fst_length","","",36,null],[12,"fst_bytesalloc","","",36,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",37,null],[12,"ra_count","","",37,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",39,null],[12,"dli_fbase","","",39,null],[12,"dli_sname","","",39,null],[12,"dli_saddr","","",39,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",40,null],[12,"sin_family","","",40,null],[12,"sin_port","","",40,null],[12,"sin_addr","","",40,null],[12,"sin_zero","","",40,null],[3,"statfs","","",null,null],[12,"f_bsize","","",41,null],[12,"f_iosize","","",41,null],[12,"f_blocks","","",41,null],[12,"f_bfree","","",41,null],[12,"f_bavail","","",41,null],[12,"f_files","","",41,null],[12,"f_ffree","","",41,null],[12,"f_fsid","","",41,null],[12,"f_owner","","",41,null],[12,"f_type","","",41,null],[12,"f_flags","","",41,null],[12,"f_fssubtype","","",41,null],[12,"f_fstypename","","",41,null],[12,"f_mntonname","","",41,null],[12,"f_mntfromname","","",41,null],[12,"f_reserved","","",41,null],[3,"kevent","","",null,null],[12,"ident","","",42,null],[12,"filter","","",42,null],[12,"flags","","",42,null],[12,"fflags","","",42,null],[12,"data","","",42,null],[12,"udata","","",42,null],[3,"kevent64_s","","",null,null],[12,"ident","","",43,null],[12,"filter","","",43,null],[12,"flags","","",43,null],[12,"fflags","","",43,null],[12,"data","","",43,null],[12,"udata","","",43,null],[12,"ext","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curbytes","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_id","","",44,null],[12,"dqb_spare","","",44,null],[3,"termios","","",null,null],[12,"c_iflag","","",45,null],[12,"c_oflag","","",45,null],[12,"c_cflag","","",45,null],[12,"c_lflag","","",45,null],[12,"c_cc","","",45,null],[12,"c_ispeed","","",45,null],[12,"c_ospeed","","",45,null],[3,"flock","","",null,null],[12,"l_start","","",46,null],[12,"l_len","","",46,null],[12,"l_pid","","",46,null],[12,"l_type","","",46,null],[12,"l_whence","","",46,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",47,null],[12,"hdr_cnt","","",47,null],[12,"trailers","","",47,null],[12,"trl_cnt","","",47,null],[3,"lconv","","",null,null],[12,"decimal_point","","",48,null],[12,"thousands_sep","","",48,null],[12,"grouping","","",48,null],[12,"int_curr_symbol","","",48,null],[12,"currency_symbol","","",48,null],[12,"mon_decimal_point","","",48,null],[12,"mon_thousands_sep","","",48,null],[12,"mon_grouping","","",48,null],[12,"positive_sign","","",48,null],[12,"negative_sign","","",48,null],[12,"int_frac_digits","","",48,null],[12,"frac_digits","","",48,null],[12,"p_cs_precedes","","",48,null],[12,"p_sep_by_space","","",48,null],[12,"n_cs_precedes","","",48,null],[12,"n_sep_by_space","","",48,null],[12,"p_sign_posn","","",48,null],[12,"n_sign_posn","","",48,null],[12,"int_p_cs_precedes","","",48,null],[12,"int_n_cs_precedes","","",48,null],[12,"int_p_sep_by_space","","",48,null],[12,"int_n_sep_by_space","","",48,null],[12,"int_p_sign_posn","","",48,null],[12,"int_n_sign_posn","","",48,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",49,null],[12,"sigev_signo","","",49,null],[12,"sigev_value","","",49,null],[12,"sigev_notify_attributes","","",49,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"_WSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[11,"clone","","",50,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",56,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",57,null],[11,"clone","","",24,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"NCCS","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDENABLE_BG_TRACE","","",null,null],[17,"KERN_KDDISABLE_BG_TRACE","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"if_nameindex"],[3,"aiocb"],[3,"utmpx"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlock_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
