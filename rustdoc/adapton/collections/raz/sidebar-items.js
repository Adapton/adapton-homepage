initSidebarItems({"enum":[["Dir","Distinguishes left (`L`) and right (`R`) traversal orders for various operations involving trees."],["Edit","An O(1)-sized change to the zipper: a single element insertion, replacement, removal; or, a local cursor movement by one element in either direction."],["Tree","A binary tree with vector leaves (aka, a \"rope\"), balanced probabilistically."]],"fn":[["mergesort_eager","Merge-sort the elements of the given tree, producing another tree, in ascending order (when `d = Dir::L`) or descending order (when `d = Dir::R`)."],["tree_append","Appends the sequences of two trees"],["tree_empty","A tree that consists of zero elements (and exactly one punctuation `p`)."],["tree_of_zip","Unfocuses the zipper into a tree form"],["zip_edit","Perform the given edit, in the given direction, at the current focus of the given zipper. The zipper is taken because its head vectors may be mutated, e.g., to insert or remove elements."],["zip_empty","A zipper that consists of zero elements (and exactly one punctuation `p`)."],["zip_insert","Transform the zipper, inserting element `x` in the given direction `d`. The optional punctuation `p` follows the inserted element, in the given direction."]],"struct":[["Punc","Punctuation: Information that is interposed between each run of elements, and sometimes before and after them.  The RAZ uses user-chosen levels to probabilistically balance the Tree form. The RAZ uses the Name to identify cached computations in Adapton."],["Zip","The Zipper form consists of element sequences before (to the left of) and after (to the right of) a distinguished punctuation point in the sequence."]]});