initSidebarItems({"fn":[["inc_level","level generator for inc_* structures (others use `Rng::gen()`)"]],"mod":[["archive_stack","High-gauge Stack"],["gauged_raz","Gauged RAZ - random access sequence"],["inc_gauged_raz","Temporary alteration of guaged_raz for incremental use"],["inc_level_tree","Temporary alteration of level_tree for incremental use"],["inc_tree_cursor","Temporary alteration of tree_cursor for incremental use"],["level_tree","a persistent, cannonical tree that keeps track of the \"level\" of each of its branches."],["persist_raz","Random access zipper, early version"],["seqzip","Early work on traits for the raz"],["stack","Persistent stack, modified slightly from \"Learning Rust With Entirely Too Many Linked Lists\""],["tree_cursor","Tree Cursor for `level_tree`"],["trees","Traits for various flavors of persistent trees"],["zip","Early work on traits for zippers"]],"type":[["ArchiveStack","Cross between vector and persistent stack"],["IRaz","Incremental Raz - Experimental for use with Adapton"],["IRazTree","Unfocused `IRaz`"],["PRaz","Persistent Raz - original design, simple but works"],["PRazTree","Unfocused `PRaz`"],["Raz","Raz - Sequence editing. Vectorized leaves, manualy defined"],["RazTree","Unfocused `Raz`"],["Stack","Functional programming's common list, persistent"],["TCursor","Cursor for use with `Tree`"],["Tree","Persistent Tree, structured by Levels"],["Zipper","Stack-based sequence editing"]]});