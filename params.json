{"name":"Adapton","tagline":"Programming Language Abstractions for Incremental Computation","body":"A computation is **incremental** if repeating it with a **changed input** is *faster than from-scratch recomputation*.  Incremental computations are a ubiquitous phenomena in everyday computer systems.\r\n\r\n**Adapton** offers **programming language abstractions** for **incremental computation**.  \r\n\r\nCode:\r\n=======\r\n - [Adapton for **OCaml**](https://github.com/plum-umd/adapton.ocaml)\r\n - [Adapton for **Rust** ](https://github.com/plum-umd/adapton.rust)\r\n\r\nVideos:\r\n=========\r\n\r\nIncremental Computation with Adapton  \r\n---------------------------------------\r\n**Matthew A Hammer**  \r\nUniversity of Colorado, Boulder. March 2015.  \r\nhttps://vimeo.com/122066659  \r\n\r\nPublications:\r\n================\r\n\r\nIncremental Computation with Names\r\n----------------------------------------------------\r\n - Paper: http://arxiv.org/abs/1503.07792  \r\n - [Artifact Guide](https://github.com/plum-umd/adapton.ocaml/blob/master/oopsla15_artifact_docs/ArtifactGuide.md)  \r\n - [Artifact VM image](https://www.cs.umd.edu/projects/PL/adapton-oopsla2015/icwn-oopsla15.ova)  \r\n\r\nMatthew A. Hammer, Joshua Dunfield, Kyle Headley, Nicholas Labich, Jeffrey S. Foster, Michael Hicks, David Van Horn  \r\nAdapton: Composable, Demand-Driven Incremental Computation\r\n------------------------------------------------------------\r\nPaper: http://www.cs.umd.edu/~hammer/adapton/  \r\nArtifact (VM image): http://www.cs.umd.edu/projects/PL/adapton/  \r\n\r\nMatthew A. Hammer, Yit Phang Khoo, Michael Hicks and Jeffrey S. Foster  \r\nProgramming Language Design and Implementation (**PLDI 2014**).  \r\nEdinburgh, Scotland. June 2014.  \r\n\r\n\r\n ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}